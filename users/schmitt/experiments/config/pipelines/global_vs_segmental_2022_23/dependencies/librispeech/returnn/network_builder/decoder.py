

def get_decoder_dict():
  return {
    "output": {
      "class": "rec",
      "target": "targets",
      "max_seq_len": "max_len_from('base:encoder')",
      "from": [],
      "unit": {
        "end": {"class": "compare", "kind": "equal", "from": "output", "value": 0},
        "target_embed0": {
          "class": "linear",
          "activation": None,
          "with_bias": False,
          "from": "output",
          "n_out": 640,
          "L2": 0.0001,
          "initial_output": 0,
        },
        "target_embed": {
          "class": "dropout",
          "from": "target_embed0",
          "dropout": 0.1,
          "dropout_noise_shape": {"*": None},
        },
        "s_transformed": {
          "class": "linear",
          "activation": None,
          "with_bias": False,
          "from": "s",
          "n_out": 1024,
          "L2": 0.0001,
        },
        "accum_att_weights": {
          "class": "eval",
          "eval": "source(0) + source(1) * source(2) * 0.5",
          "from": ["prev:accum_att_weights", "att_weights", "base:inv_fertility"],
          "out_type": {"dim": 1, "shape": (None, 1)},
        },
        "weight_feedback": {
          "class": "linear",
          "activation": None,
          "with_bias": False,
          "from": "prev:accum_att_weights",
          "n_out": 1024,
        },
        "energy_in": {
          "class": "combine",
          "kind": "add",
          "from": ["base:enc_ctx", "weight_feedback", "s_transformed"],
          "n_out": 1024,
        },
        "energy_tanh": {
          "class": "activation",
          "activation": "tanh",
          "from": "energy_in",
        },
        "energy": {
          "class": "linear",
          "activation": None,
          "with_bias": False,
          "from": "energy_tanh",
          "n_out": 1,
          "L2": 0.0001,
        },
        "att_weights": {"class": "softmax_over_spatial", "from": "energy"},
        "att0": {
          "class": "generic_attention",
          "weights": "att_weights",
          "base": "base:enc_value",
        },
        "att": {"class": "merge_dims", "from": "att0", "axes": "except_batch"},
        "s": {
          "class": "rnn_cell",
          "unit": "zoneoutlstm",
          "n_out": 1024,
          "from": ["prev:target_embed", "prev:att"],
          "L2": 0.0001,
          "unit_opts": {
            "zoneout_factor_cell": 0.15,
            "zoneout_factor_output": 0.05,
            "use_zoneout_output": True,
          },
        },
        "readout_in": {
          "class": "linear",
          "activation": None,
          "with_bias": True,
          "from": ["s", "prev:target_embed", "att"],
          "n_out": 1024,
          "L2": 0.0001,
        },
        "readout": {
          "class": "reduce_out",
          "from": "readout_in",
          "num_pieces": 2,
          "mode": "max",
        },
        "output_prob": {
          "class": "softmax",
          "from": "readout",
          "dropout": 0.3,
          "target": "targets",
          "loss": "ce",
          "loss_opts": {"label_smoothing": 0.1},
          "L2": 0.0001,
        },
        "output": {
          "class": "choice",
          "target": "targets",
          "beam_size": 12,
          "from": "output_prob",
          "initial_output": 0,
        },
      },
    },
  }